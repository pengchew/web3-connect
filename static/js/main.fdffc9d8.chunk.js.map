{"version":3,"sources":["theme/index.ts","components/Layout.tsx","components/ConnectButton.tsx","App.tsx","index.tsx"],"names":["extendTheme","fonts","heading","body","Layout","children","flexDirection","alignItems","justifyContent","h","bg","a","network","ChainId","CHAIN_INFO","chainId","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","window","ethereum","request","method","params","catch","tx","console","log","ConnectButton","handleOpenModal","isOpen","onClose","provider","getProvider","initialRef","Web3","useRef","address","networkId","onClick","changeNetwork","color","fontSize","fontWeight","borderRadius","border","_hover","borderColor","_active","backgroundColor","autoFocus","isCentered","size","background","borderStyle","px","pt","pb","mb","ref","disconnect","variant","height","textDecoration","mt","lineHeight","ml","shortAddress","jazzicon","alignContent","m","navigator","clipboard","writeText","Copy","mr","display","href","isExternal","ExternalLink","borderBottomLeftRadius","borderBottomRightRadius","p","textAlign","py","parseFloat","etherBalance","toFixed","App","useDisclosure","onOpen","useState","web3","weiBalance","setprovider","StyledIdenticon","styled","div","flag","enable","utils","eth","getAccounts","_address","toChecksumAddress","net","getId","_networkId","_wei","_eth","getBalance","err","res","fromWei","_provider","slice","length","nodeElement","innerHTML","appendChild","Jazzicon","parseInt","useEffect","on","theme","ReactDOM","render","StrictMode","DAppProvider","config","document","getElementById"],"mappings":"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","file":"static/js/main.fdffc9d8.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\r\n\r\nexport default extendTheme({\r\n  fonts: {\r\n    heading: \"Inter\",\r\n    body: \"Inter\",\r\n  },\r\n});\r\n","import { ReactNode } from \"react\";\r\nimport { Flex } from \"@chakra-ui/react\";\r\n\r\ntype Props = {\r\n  children?: ReactNode;\r\n};\r\n\r\nexport default function Layout({ children }: Props) {\r\n  return (\r\n    <Flex\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n      h=\"100vh\"\r\n      bg=\"gray.800\"\r\n    >\r\n      {children}\r\n    </Flex>\r\n  );\r\n}\r\n","import Web3 from 'web3';\r\nimport { useEffect, useState,useRef } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\r\n\r\n\r\ndeclare let window: any;\r\n\r\nexport async function changeNetwork(network=''){\r\n  enum ChainId {\r\n    MAINNET = 1,\r\n    ROPSTEN = 3,\r\n    RINKEBY = 4,\r\n    GOERLI = 5,\r\n    KOVAN = 42,\r\n\r\n    ARBITRUM_ONE = 42161,\r\n    ARBITRUM_RINKEBY = 421611,\r\n    OPTIMISM = 10,\r\n    OPTIMISTIC_KOVAN = 69,\r\n  }\r\n  const CHAIN_INFO: { [key: string]: any } = {\r\n    'BNB':{\r\n      chainId: '0x38',\r\n      chainName: 'Binance Smart Chain',\r\n      nativeCurrency: {\r\n          name: 'Binance Coin',\r\n          symbol: 'BNB',\r\n          decimals: 18\r\n      },\r\n      rpcUrls: ['https://bsc-dataseed.binance.org/'],\r\n      blockExplorerUrls: ['https://bscscan.com/']\r\n    },\r\n    'FTM':{\r\n      chainId: '0xfa',\r\n      chainName: 'Fantom Opera',\r\n      nativeCurrency: {\r\n          name: 'FTM',\r\n          symbol: 'FTM',\r\n          decimals: 18\r\n      },\r\n      rpcUrls: ['https://rpc.ftm.tools/'],\r\n      blockExplorerUrls: ['https://ftmscan.com/']\r\n    },\r\n    'MATIC':{\r\n      chainId: '0x89',\r\n      chainName: 'Matic Mainnet',\r\n      nativeCurrency: {\r\n          name: 'MATIC',\r\n          symbol: 'MATIC',\r\n          decimals: 18\r\n      },\r\n      rpcUrls: ['https://rpc-mainnet.maticvigil.com/'],\r\n      blockExplorerUrls: ['https://explorer.matic.network/']\r\n    },\r\n    'AVAX':{\r\n      chainId: '0xa86a',\r\n      chainName: 'Avalanche Network',\r\n      nativeCurrency: {\r\n          name: 'AVAX',\r\n          symbol: 'AVAX',\r\n          decimals: 18\r\n      },\r\n      rpcUrls: ['https://api.avax.network/ext/bc/C/rpc/'],\r\n      blockExplorerUrls: ['https://cchain.explorer.avax.network/']\r\n    },\r\n\r\n  }\r\n\r\n  const tx = await window.ethereum.request({method: 'wallet_addEthereumChain', params:[CHAIN_INFO[network]]}).catch()\r\n  if (tx) {\r\n      console.log(tx)\r\n  }\r\n}\r\ntype Props = {\r\n  handleOpenModal: any;\r\n  isOpen: any;\r\n  onClose: any;\r\n  provider: any;\r\n  getProvider: any;\r\n};\r\n\r\nexport default function ConnectButton({ handleOpenModal,isOpen, onClose,provider,getProvider }: Props) {\r\n  const web3:any = new Web3(window.ethereum)\r\n  // const provider = connect();\r\n  const initialRef = useRef<any>();\r\n\r\n  if(!provider.address){\r\n    return (\r\n      <><Button\r\n        onClick={()=>getProvider({})}\r\n        bg=\"blue.800\"\r\n        color=\"blue.300\"\r\n        fontSize=\"lg\"\r\n        fontWeight=\"medium\"\r\n        borderRadius=\"xl\"\r\n        border=\"1px solid transparent\"\r\n        _hover={{\r\n          borderColor: \"blue.700\",\r\n          color: \"blue.400\",\r\n        }}\r\n        _active={{\r\n          backgroundColor: \"blue.800\",\r\n          borderColor: \"blue.700\",\r\n        }}\r\n      >\r\n        Connect to a wallet\r\n      </Button></>\r\n    );\r\n  }\r\n\r\n  if(provider.networkId!==137){\r\n    return(\r\n      <><Button\r\n        onClick={()=>changeNetwork(provider.symbol)}\r\n        bg=\"blue.800\"\r\n        color=\"blue.300\"\r\n        fontSize=\"lg\"\r\n        fontWeight=\"medium\"\r\n        borderRadius=\"xl\"\r\n        border=\"1px solid transparent\"\r\n        _hover={{\r\n          borderColor: \"blue.700\",\r\n          color: \"blue.400\",\r\n        }}\r\n        _active={{\r\n          backgroundColor: \"blue.800\",\r\n          borderColor: \"blue.700\",\r\n        }}\r\n      >\r\n        Switch to {provider.symbol}\r\n      </Button></>\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <><Modal autoFocus={false}  isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\r\n        <ModalOverlay />\r\n        <ModalContent\r\n          background=\"gray.900\"\r\n          border=\"1px\"\r\n          borderStyle=\"solid\"\r\n          borderColor=\"gray.700\"\r\n          borderRadius=\"3xl\"\r\n        >\r\n          <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\r\n            Account\r\n\r\n          </ModalHeader>\r\n          <ModalCloseButton\r\n            color=\"white\"\r\n            fontSize=\"sm\"\r\n          />\r\n          <ModalBody pt={0} px={4}>\r\n            <Box\r\n              borderRadius=\"3xl\"\r\n              border=\"1px\"\r\n              borderStyle=\"solid\"\r\n              borderColor=\"gray.600\"\r\n              px={5}\r\n              pt={4}\r\n              pb={2}\r\n              mb={3}\r\n            >\r\n              <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n                <Text color=\"gray.400\" fontSize=\"sm\">\r\n                  Connected with MetaMask\r\n                </Text>\r\n                <Button\r\n                  ref={initialRef}\r\n                  onClick={()=>getProvider({disconnect:true})}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  borderColor=\"blue.800\"\r\n                  borderRadius=\"3xl\"\r\n                  color=\"blue.500\"\r\n                  fontSize=\"13px\"\r\n                  fontWeight=\"normal\"\r\n                  px={2}\r\n                  height=\"26px\"\r\n                  _hover={{\r\n                    background: \"none\",\r\n                    borderColor: \"blue.300\",\r\n                    textDecoration: \"none\",\r\n                  }}\r\n                >\r\n                  Change\r\n                </Button>\r\n              </Flex>\r\n              <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\r\n\r\n                <Text\r\n                  color=\"white\"\r\n                  fontSize=\"xl\"\r\n                  fontWeight=\"semibold\"\r\n                  ml=\"2\"\r\n                  lineHeight=\"1.1\"\r\n                >\r\n                  {provider.shortAddress}\r\n                </Text>{provider.jazzicon}\r\n              </Flex>\r\n              <Flex alignContent=\"center\" m={3}>\r\n                <Button\r\n                  onClick={() => {navigator.clipboard.writeText(provider.address)}}\r\n                  variant=\"link\"\r\n                  color=\"gray.400\"\r\n                  fontWeight=\"normal\"\r\n                  fontSize=\"sm\"\r\n                  _hover={{\r\n                    textDecoration: \"none\",\r\n                    color: \"whiteAlpha.800\",\r\n                  }}\r\n                >\r\n                  <CopyIcon mr={1} />\r\n                  Copy Address\r\n                </Button>\r\n                <Link\r\n                  fontSize=\"sm\"\r\n                  display=\"flex\"\r\n                  alignItems=\"center\"\r\n                  href={`https://polygonscan.com/address/${provider.address}`}\r\n                  isExternal\r\n                  color=\"gray.400\"\r\n                  ml={6}\r\n                  _hover={{\r\n                    color: \"whiteAlpha.800\",\r\n                    textDecoration: \"underline\",\r\n                  }}\r\n                >\r\n                  <ExternalLinkIcon mr={1} />\r\n                  View on Explorer\r\n                </Link>\r\n              </Flex>\r\n            </Box>\r\n          </ModalBody>\r\n\r\n          <ModalFooter\r\n            justifyContent=\"end\"\r\n            background=\"gray.700\"\r\n            borderBottomLeftRadius=\"3xl\"\r\n            borderBottomRightRadius=\"3xl\"\r\n            p={6}\r\n          >\r\n            <Text\r\n              color=\"white\"\r\n              textAlign=\"left\"\r\n              fontWeight=\"medium\"\r\n              fontSize=\"md\"\r\n            >\r\n              Your transactions will appear here...\r\n            </Text>\r\n          </ModalFooter>\r\n        </ModalContent>\r\n      </Modal>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        background=\"gray.700\"\r\n        borderRadius=\"xl\"\r\n        py=\"0\"\r\n      >{}\r\n        <Box px=\"3\">\r\n          <Text color=\"white\" fontSize=\"md\">\r\n            {parseFloat(provider.etherBalance as string).toFixed(4)} {provider.symbol}\r\n          </Text>\r\n        </Box>\r\n        <Button\r\n          onClick={handleOpenModal}\r\n          bg=\"gray.800\"\r\n          border=\"1px solid transparent\"\r\n          _hover={{\r\n            border: \"1px\",\r\n            borderStyle: \"solid\",\r\n            borderColor: \"blue.400\",\r\n            backgroundColor: \"gray.700\",\r\n          }}\r\n          borderRadius=\"xl\"\r\n          m=\"1px\"\r\n          px={3}\r\n          height=\"38px\"\r\n        >\r\n          <Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\r\n            {provider.shortAddress}\r\n          </Text>\r\n          {provider.jazzicon}\r\n        </Button>\r\n      </Box></>\r\n    )\r\n  }\r\n\r\n}\r\n","import { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\r\nimport theme from \"./theme\";\r\nimport Layout from \"./components/Layout\";\r\nimport ConnectButton from \"./components/ConnectButton\";\r\nimport \"@fontsource/inter\";\r\nimport Web3 from 'web3';\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport Jazzicon from \"@metamask/jazzicon\";\r\nimport styled from \"@emotion/styled\";\r\nimport { BigNumber, utils } from 'ethers'\r\n\r\n\r\ndeclare let window: any;\r\n\r\nfunction App() {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n  const[provider,setprovider]=useState<{\r\n    web3:any,\r\n    address:string,\r\n    shortAddress:string,\r\n    networkId:number|string,\r\n    weiBalance:number|string,\r\n    etherBalance:number|string,\r\n    symbol:string,\r\n    jazzicon:any,\r\n  }>({\r\n    web3:'',\r\n    address:'',\r\n    shortAddress:'',\r\n    networkId:'',\r\n    weiBalance:'',\r\n    etherBalance:'',\r\n    symbol:'MATIC',\r\n    jazzicon:<></>\r\n  })\r\n\r\n  function handlesetprovider(input=provider){\r\n      setprovider(input);\r\n  }\r\n\r\n  const StyledIdenticon = styled.div`\r\n    height: 1rem;\r\n    width: 1rem;\r\n    border-radius: 1.125rem;\r\n    display:inline-block;\r\n    margin-left:0.5rem;\r\n  `;\r\n  async function getProvider(flag={disconnect:false }) {\r\n\r\n      const web3:any = new Web3(window.ethereum)\r\n      await window.ethereum.enable();\r\n      let _address = web3.utils.toChecksumAddress((await web3.eth.getAccounts())[0]);\r\n      let _networkId = await web3.eth.net.getId();\r\n      let _wei = '';\r\n      let _eth = '';\r\n\r\n\r\n      await web3.eth.getBalance(_address,(err:any,res:any)=>{\r\n         _wei=res as string;\r\n         _eth=web3.utils.fromWei(res,'ether');\r\n      })\r\n\r\n      const _provider=flag.disconnect?{\r\n        web3:web3,\r\n        address:'',\r\n        shortAddress:'',\r\n        networkId:'',\r\n        weiBalance:'',\r\n        etherBalance:'',\r\n        symbol:provider.symbol,\r\n        jazzicon:<></>\r\n      }:{\r\n        web3:web3,\r\n        address:_address,\r\n        shortAddress:_address.slice(0, 6)+'...'+_address.slice(_address.length - 4,_address.length),\r\n        networkId:_networkId,\r\n        weiBalance:_wei,\r\n        etherBalance:_eth,\r\n        symbol:provider.symbol,\r\n        jazzicon:<StyledIdenticon ref={(nodeElement) => {\r\n                                    if (nodeElement) {\r\n                                      nodeElement.innerHTML = ''\r\n                                      nodeElement.appendChild(Jazzicon(16, parseInt(_address.slice(2, 10), 16)))\r\n                                    }\r\n                                  }}\r\n                                ></StyledIdenticon>\r\n      }\r\n      setprovider(_provider);\r\n      console.log(_provider);\r\n  }\r\n  useEffect(()=>{\r\n    window.ethereum.on(\"accountsChanged\", async () => {\r\n      getProvider()\r\n    });\r\n    window.ethereum.on(\"chainChanged\", async () => {\r\n      getProvider()\r\n    });\r\n  },[])\r\n  return (\r\n    <ChakraProvider theme={theme}>\r\n      <Layout>\r\n        <ConnectButton provider={provider} getProvider={getProvider} isOpen={isOpen} onClose={onClose} handleOpenModal={onOpen} />\r\n      </Layout>\r\n    </ChakraProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { DAppProvider } from \"@usedapp/core\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DAppProvider config={{}}>\r\n      <App />\r\n    </DAppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}